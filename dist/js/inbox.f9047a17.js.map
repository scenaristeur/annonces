{"version":3,"sources":["webpack:///./src/components/annonce/AnnonceInbox.vue?48b5","webpack:///src/components/annonce/AnnonceInbox.vue","webpack:///./src/components/annonce/AnnonceInbox.vue?3f5d","webpack:///./src/components/annonce/AnnonceInbox.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","webId","acl","status","_v","attrs","_s","inboxAnnonceFolder","on","setAcl","_e","messages","length","_l","m","key","url","created","creator","annonce","title","text","staticStyle","$event","reply","directives","name","rawName","modifiers","showDeleteConfirm","onDelete","staticClass","domProps","deleteMessage","staticRenderFns","data","methods","urlToDelete","watch","init","computed","$store","state","solid","component"],"mappings":"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","file":"js/inbox.f9047a17.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.webId != null)?_c('div',[(_vm.acl.status != 'OK')?_c('div',[_c('h5',[_vm._v(\"ACL / Authorization verification : \")]),_c('p',[_vm._v(\" To allow other Authenticated Users to send you inbox message, you have to set correct Authorizations for \"),_c('b-badge',{attrs:{\"variant\":\"warning\"}},[_vm._v(_vm._s(_vm.inboxAnnonceFolder))]),_vm._v(\" as i'm not sure the are good : \"),_c('ul',[_c('li',[_c('b-badge',{attrs:{\"variant\":\"warning\"}},[_vm._v(_vm._s(_vm.webId))]),_vm._v(\" with \"),_c('b-badge',{attrs:{\"variant\":\"warning\"}},[_vm._v(\"CONTROL\")])],1),_c('li',[_vm._v(\" AuthenticatedAgent as \\\"Poster\\\" for the folder & \\\"Submitters\\\" for it's content \")])]),_c('br'),_c('a',{attrs:{\"href\":\"https://github.com/jeff-zucker/solid-file-client/issues/189\",\"target\":\"_blank\"}},[_vm._v(\" More info about why You must change authorization on this folder\")])],1),_vm._v(\" You can do it manually at \"),_c('a',{attrs:{\"href\":_vm.inboxAnnonceFolder,\"target\":\"_blank\"}},[_vm._v(_vm._s(_vm.inboxAnnonceFolder))]),_vm._v(\" or use this button. \"),_c('br'),(_vm.acl.status == 'KO')?_c('b-button',{on:{\"click\":_vm.setAcl}},[_vm._v(\"Set Authorization\")]):_vm._e()],1):_vm._e(),_c('b-list-group',[_vm._v(\" INBOX ( \"+_vm._s(_vm.messages.length)+\" messages ) \"),_vm._l((_vm.messages),function(m){return _c('b-list-group-item',{key:m.url},[_vm._v(\" \"+_vm._s(m.created)+\" / \"+_vm._s(m.creator)+\" : \"),_c('b',[_vm._v(_vm._s(m.annonce.title))]),_vm._v(\" ::: \"+_vm._s(m.text)+\" \"),_c('b-button',{staticStyle:{\"margin-left\":\"auto\"},attrs:{\"variant\":\"light\"},on:{\"click\":function($event){return _vm.reply(m)}}},[_c('b-icon',{attrs:{\"icon\":\"pen\"}})],1),_c('b-button',{directives:[{name:\"b-modal\",rawName:\"v-b-modal.message-delete\",modifiers:{\"message-delete\":true}}],staticStyle:{\"margin-left\":\"auto\"},attrs:{\"variant\":\"danger\"},on:{\"click\":function($event){return _vm.showDeleteConfirm(m)}}},[_c('b-icon',{attrs:{\"icon\":\"trash\"}})],1)],1)}),_c('b-modal',{attrs:{\"id\":\"message-delete\",\"centered\":\"\",\"title\":\"Delete\"},on:{\"ok\":_vm.onDelete}},[_c('div',{staticClass:\"p-3\",domProps:{\"innerHTML\":_vm._s(_vm.deleteMessage)}})])],2)],1):_c('div',[_vm._v(\" You must login to manage your annonces inbox. \")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n\r\n  <div>\r\n    <div v-if=\"webId != null\">\r\n      <div v-if=\"acl.status != 'OK'\">\r\n        <h5>ACL / Authorization verification : </h5>\r\n        <p>\r\n          To allow other Authenticated Users to send you inbox message, you have to set correct Authorizations for <b-badge variant=\"warning\">{{ inboxAnnonceFolder }}</b-badge> as i'm not sure the are good :\r\n          <ul>\r\n            <li>\r\n              <b-badge variant=\"warning\">{{webId}}</b-badge> with <b-badge variant=\"warning\">CONTROL</b-badge>\r\n            </li>\r\n            <li>\r\n              AuthenticatedAgent as \"Poster\" for the folder & \"Submitters\" for it's content\r\n            </li>\r\n          </ul>\r\n          <br>\r\n\r\n          <a href=\"https://github.com/jeff-zucker/solid-file-client/issues/189\" target=\"_blank\">\r\n            More info about why You must change authorization on this folder</a>\r\n          </p>\r\n          You can do it manually at <a :href=\"inboxAnnonceFolder\" target=\"_blank\">{{ inboxAnnonceFolder }}</a> or use this button. <br>\r\n          <b-button @click=\"setAcl\" v-if=\"acl.status == 'KO'\">Set Authorization</b-button>\r\n          <!-- <small>\r\n          {{ acl }}\r\n        </small> -->\r\n      </div>\r\n\r\n\r\n      <b-list-group>\r\n        INBOX ( {{ messages.length}} messages )\r\n        <b-list-group-item v-for=\"m in messages\" :key=\"m.url\">\r\n          {{ m.created }} / {{ m.creator}} : <b>{{m.annonce.title}}</b> ::: {{ m.text }}\r\n\r\n\r\n          <b-button variant=\"light\" @click=\"reply(m)\" style=\"margin-left:auto;\">\r\n            <b-icon icon=\"pen\"></b-icon>\r\n          </b-button>\r\n          <b-button variant=\"danger\" @click=\"showDeleteConfirm(m)\" style=\"margin-left:auto;\" v-b-modal.message-delete>\r\n            <b-icon icon=\"trash\"></b-icon>\r\n          </b-button>\r\n        </b-list-group-item>\r\n\r\n        <b-modal id=\"message-delete\" centered title=\"Delete\" @ok=\"onDelete\">\r\n          <div class=\"p-3\" v-html=\"deleteMessage\"></div>\r\n        </b-modal>\r\n\r\n      </b-list-group>\r\n\r\n    </div>\r\n\r\n    <div v-else>\r\n      You must login to manage your annonces inbox.\r\n    </div>\r\n  </div>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport auth from 'solid-auth-client';\r\nimport FC from 'solid-file-client'\r\nconst fc = new FC( auth )\r\nlet ldflex = window.solid\r\n// import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default {\r\n  name: \"AnnonceInbox\",\r\n  data() {\r\n    return {\r\n      messages: [],\r\n      deleteMessage: \"\",\r\n      inboxAnnonceFolder: \"\",\r\n      acl: {status: \"checking\"}\r\n    }\r\n  },\r\n  async created(){\r\n    this.init()\r\n  },\r\n  methods: {\r\n    async init(){\r\n      if (this.webId != null){\r\n        //get inbox Folder\r\n        this.acl.status = \"finding webId\"\r\n        let inboxFolder = await ldflex.data.from(this.webId)[this.webId]['http://www.w3.org/ns/ldp#inbox']\r\n        this.acl.status = \"finding inbox\"\r\n        // get aannonce inbox folder\r\n        this.inboxAnnonceFolder = await `${inboxFolder}`+\"annonces/\"\r\n        this.acl.status = \"imagining a annonce folder\"\r\n        console.log(this.webId, this.inboxAnnonceFolder)\r\n        await this.checkAcl(\"first run\")\r\n        this.readInbox()\r\n      }\r\n    },\r\n    async checkAcl(step){\r\n      // create inbox annonce folder if not exist\r\n      this.acl.status = \"checking if folder exist\"\r\n      if( !(await fc.itemExists(this.inboxAnnonceFolder)) ) {\r\n        this.acl.status = \"creating folder\"\r\n        await fc.createFolder(this.inboxAnnonceFolder) // only create if it doesn't already exist\r\n      }\r\n      // check aclObject\r\n      this.acl.status = \"cheching authorizations\"\r\n      this.acl.aclObject = await fc.aclUrlParser(this.inboxAnnonceFolder)\r\n      console.log(step,\"aclObject on \",this.inboxAnnonceFolder,JSON.stringify(this.acl.aclObject, undefined,2))\r\n      // create Content from aclObject\r\n      this.acl.aclContent = await fc.acl.createContent(this.inboxAnnonceFolder, this.acl.aclObject/*, options*/)\r\n      console.log(step,\"aclcontent on \",this.inboxAnnonceFolder, this.acl.aclContent)\r\n      console.log(step,\"aclon \",this.inboxAnnonceFolder, this.acl)\r\n      // say they are KO for the moment as i can't verify see issue : https://github.com/jeff-zucker/solid-file-client/issues/189#issuecomment-812887070\r\n      this.acl.status = \"KO\"\r\n    },\r\n\r\n    async setAcl(){\r\n      // according to recent solid-file-client changes : https://github.com/jeff-zucker/solid-file-client/issues/189#issuecomment-808966875\r\n      try{\r\n        this.acl.status = \"setting authorizations\"\r\n        let   aclUsers1 = await fc.acl.addUserMode({}, [{ agent: this.webId }], ['Read', 'Write', 'Control'], ['accessTo', 'default'])\r\n        aclUsers1 = await fc.acl.addUserMode(aclUsers1, [{ agentClass: 'AuthenticatedAgent' }], ['Append'], ['default'])\r\n\r\n        const aclUsers2 = await fc.acl.addUserMode({}, [{ agentClass: 'AuthenticatedAgent' }], ['Append', 'Read'], ['accessTo'])\r\n\r\n        const aclUsers = [aclUsers1, aclUsers2]\r\n\r\n        const aclContentNew = await fc.acl.createContent(this.inboxAnnonceFolder, aclUsers)\r\n        console.log('build an aclContent ' + aclContentNew)\r\n\r\n        const { acl: aclUrl } = await fc.getItemLinks(this.inboxAnnonceFolder, { links: 'include_possible'})\r\n        //    const links = await fc.getItemLinks(inboxAnnonce, { links: 'include_possible'})\r\n\r\n        //  console.log(links)\r\n        let result = await fc.putFile(aclUrl, aclContentNew, 'text/turtle')\r\n        console.log(\"result\",result)\r\n        //this.acl.status = \"OK\"\r\n        await this.checkAcl(\"after update\")\r\n      }catch(e){\r\n        this.acl.status = \"ERROR : \"+e\r\n        alert(e)\r\n\r\n      }\r\n\r\n\r\n    },\r\n    async readInbox() {\r\n\r\n\r\n      // @prefix : <#>.\r\n      // @prefix acl: <http://www.w3.org/ns/auth/acl#>.\r\n      // @prefix foaf: <http://xmlns.com/foaf/0.1/>.\r\n      // @prefix target: <./>.\r\n      //\r\n      // :ReadAppend\r\n      //     a acl:Authorization;\r\n      //     acl:accessTo target:;\r\n      //     acl:agentClass acl:AuthenticatedAgent;\r\n      //     acl:mode acl:Read, acl:Append.\r\n      //\r\n      // :ReadWriteControl\r\n      //     a acl:Authorization;\r\n      //     acl:accessTo target:;\r\n      //     acl:default target:;\r\n      //     acl:agent </profile/card#me>;\r\n      //     acl:agent <https://bourgeoa.solidcommunity.net/profile/card#me>;\r\n      //     acl:mode acl:Read, acl:Write, acl:Control.\r\n\r\n      //       @prefix : <#>.\r\n      // @prefix acl: <http://www.w3.org/ns/auth/acl#>.\r\n      // @prefix foaf: <http://xmlns.com/foaf/0.1/>.\r\n      // @prefix target: <./>.\r\n      //\r\n      // :ReadAppend\r\n      //     a acl:Authorization;\r\n      //     acl:accessTo target:;\r\n      //     acl:agentClass acl:AuthenticatedAgent;\r\n      //     acl:mode acl:Read, acl:Append.\r\n      //\r\n      // :ReadWriteControl\r\n      //     a acl:Authorization;\r\n      //     acl:accessTo target:;\r\n      //     acl:agent </profile/card#me>;\r\n      //     acl:mode acl:Read, acl:Write, acl:Control.\r\n\r\n\r\n      // if (this.webId != null){\r\n      //   let inboxFolder = await ldflex.data.from(this.webId)[this.webId]['http://www.w3.org/ns/ldp#inbox']\r\n      //   let inboxAnnonce = `${inboxFolder}`+\"annonces/\"\r\n      //   if( !(await fc.itemExists(inboxAnnonce)) ) {\r\n      //     await fc.createFolder(inboxAnnonce) // only create if it doesn't already exist\r\n      //   }\r\n      //\r\n      //   let aclObject = await fc.aclUrlParser(inboxAnnonce)\r\n      //   console.log(\"inherit acl\",aclObject)\r\n      //   let aclContent = await fc.acl.createContent(inboxAnnonce, aclObject/*, options*/)\r\n      //   console.log(aclContent)\r\n      //\r\n      //   // add an other rule\r\n      //   let   aclUsers = await fc.acl.addUserMode({}, [{ agent: this.webId }], ['Read', 'Write', 'Control'], ['accessTo', 'default'])\r\n      //   aclUsers = await fc.acl.addUserMode(aclUsers, [{ agentClass: 'AuthenticatedAgent' }], ['Append'], ['default'])\r\n      //   aclUsers = await fc.acl.addUserMode(aclUsers, [{ agentClass: 'Agent' }], ['Append', 'Read'], ['accessTo'])\r\n      //\r\n      //   //      aclUsers = await fc.acl.addUserMode(aclUsers, [{ agent: 'https://bourgeoa.solidcommunity.net/profile/card#me' }], ['Read', 'Write', 'Control'], ['accessTo', 'default'])\r\n      //\r\n      //\r\n      //   //  let aclUsers = await fc.acl.addUserMode({}, [{ agentClass: 'AuthenticatedAgent'}], ['Read', 'Write'])\r\n      //   const aclContentNew = await fc.acl.createContent(inboxAnnonce, aclUsers)\r\n      //   console.log('build an aclContent ' + aclContentNew)\r\n      //\r\n      //   const { acl: aclUrl } = await fc.getItemLinks(inboxAnnonce, { links: 'include_possible'})\r\n      //   //    const links = await fc.getItemLinks(inboxAnnonce, { links: 'include_possible'})\r\n      //\r\n      //   //  console.log(links)\r\n      //   let result = await fc.putFile(aclUrl, aclContentNew, 'text/turtle')\r\n      //   console.log(\"result\",result)\r\n\r\n\r\n      let folder = await fc.readFolder(this.inboxAnnonceFolder)\r\n      console.log(folder)\r\n      let files = folder.files.sort((a,b) => new Date(b.created).getTime() - new Date(a.created).getTime());\r\n      // console.log(files)\r\n      this.messages = []\r\n      //\r\n      while ( files.length > 0){\r\n        let f = files.shift()\r\n        let m = await JSON.parse(await fc.readFile(f.url))\r\n        m.url = f.url\r\n        this.messages.push(m)\r\n        //  console.log(this.messages)\r\n        //  console.log(f)\r\n        // let resource = f.url+\"#this\"\r\n        // for await (const annonce_url of ldflex.data[resource]['http://purl.org/dc/terms/hasPart']){\r\n        //   let idx = this.annonces.findIndex(x => x.url === `${annonce_url}`)\r\n        //   if (idx === -1) {\r\n        //     this.annonces.push({url: `${annonce_url}`})\r\n        //   }\r\n        // }\r\n      }\r\n      //}\r\n    },\r\n    async onDelete(){\r\n      console.log(\"delete\")\r\n      await fc.deleteFile(this.urlToDelete)\r\n      this.readInbox()\r\n      //this.$store.dispatch('annonce/delete', this.idToDelete)\r\n    },\r\n    showDeleteConfirm(m){\r\n      this.deleteMessage= \"Do you want to delete <b>\"+m.url+\"</b>\"\r\n      this.urlToDelete = m.url\r\n    },\r\n  },\r\n  watch:{\r\n    webId(){\r\n      this.init()\r\n    }\r\n  },\r\n  computed:{\r\n    webId() {\r\n      return this.$store.state.solid.webId\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AnnonceInbox.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AnnonceInbox.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AnnonceInbox.vue?vue&type=template&id=03b228ea&\"\nimport script from \"./AnnonceInbox.vue?vue&type=script&lang=js&\"\nexport * from \"./AnnonceInbox.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}