{"remainingRequest":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Smag\\Documents\\dev\\bon-prix\\src\\components\\portfolio\\Upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\src\\components\\portfolio\\Upload.vue","mtime":1616412818710},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Upload.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <b-form-file multiple\r\n    accept=\"image/*\"\r\n    v-model=\"files\"\r\n    :state=\"Boolean(files)\"\r\n    placeholder=\"Choose a file or drop it here...\"\r\n    drop-placeholder=\"Drop file here...\"\r\n    @input=\"onInput\"\r\n    ></b-form-file>\r\n\r\n    <div ref=\"preview\"></div>\r\n    <b-button @click=\"send\">Envoyer</b-button>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nlet ldflex = window.solid\r\nimport FC from 'solid-file-client'\r\nconst fc = new FC( window.solid.auth )\r\nimport watermark from 'watermarkjs'\r\n\r\nexport default {\r\n  name: 'Upload',\r\n  data() {\r\n    return {\r\n      files: null\r\n    }\r\n  },\r\n  methods: {\r\n    async onInput(files){\r\n      console.log(files)\r\n      let preview = this.$refs.preview\r\n      let storage = await ldflex.data.user.storage\r\n      let path = `${storage}`+'public/portfolio/'\r\n      await files.forEach(async function(f)  {\r\n        console.log(f)\r\n        watermark([f])\r\n        .image(watermark.text.center(path, '30px Josefin Slab', '#fff', 0.8))\r\n        .then(img => {\r\n          img.name = f.name\r\n          img.type = f.type\r\n          preview.appendChild(img)});\r\n        })\r\n      },\r\n      async send(){\r\n        let preview = this.$refs.preview\r\n        let dataURLtoFile = this.dataURLtoFile\r\n        var images = [].slice.call(preview.children);\r\n        console.log(images)\r\n        let storage = await ldflex.data.user.storage\r\n        let path = `${storage}`+'public/portfolio/'\r\n        console.log(path)\r\n        try{\r\n          await images.forEach(async function(i)  {\r\n            let uri = path+i.name\r\n            console.log(encodeURI(uri))\r\n            var file = dataURLtoFile(i.src,i.name);\r\n            await fc.createFile(encodeURI(uri), file, i.type)\r\n          })\r\n          alert(images.length+\" fichiers sauvegardés\")\r\n        }catch(e){\r\n          alert(e)\r\n        }\r\n      },\r\n      dataURLtoFile(dataurl, filename) {\r\n        var arr = dataurl.split(','),\r\n        mime = arr[0].match(/:(.*?);/)[1],\r\n        bstr = atob(arr[1]),\r\n        n = bstr.length,\r\n        u8arr = new Uint8Array(n);\r\n        while(n--){\r\n          u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new File([u8arr], filename, {type:mime});\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n"],"sourceRoot":"src/components/portfolio"}]}