{"remainingRequest":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Smag\\Documents\\dev\\bon-prix\\src\\components\\solid\\SolidFetchTest.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\src\\components\\solid\\SolidFetchTest.vue","mtime":1616416346545},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL1NtYWcvRG9jdW1lbnRzL2Rldi9ib24tcHJpeC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsKLyogaGFuZGxlSW5jb21pbmdSZWRpcmVjdCwgbG9naW4sKi8KZmV0Y2gsIGdldERlZmF1bHRTZXNzaW9uCi8qIG9uU2Vzc2lvblJlc3RvcmUqLwp9IGZyb20gJ0BpbnJ1cHQvc29saWQtY2xpZW50LWF1dGhuLWJyb3dzZXInOwppbXBvcnQgeyBnZXRTb2xpZERhdGFzZXQKLyogc2F2ZVNvbGlkRGF0YXNldEF0ICovCn0gZnJvbSAiQGlucnVwdC9zb2xpZC1jbGllbnQiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlNvbGlkRmV0Y2hUZXN0IiwKICBtZXRob2RzOiB7CiAgICB0ZXN0OiBmdW5jdGlvbiB0ZXN0KCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciB3ZWJJZCwgbXlEYXRhc2V0OwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGdldERlZmF1bHRTZXNzaW9uKCkuaW5mby53ZWJJZDsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgd2ViSWQgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gZ2V0U29saWREYXRhc2V0KCAvLyAgImh0dHBzOi8vZG9jcy1leGFtcGxlLmlucnVwdC5uZXQvcHJvZmlsZS9jYXJkIiwgewogICAgICAgICAgICAgICAgd2ViSWQsIHsKICAgICAgICAgICAgICAgICAgZmV0Y2g6IGZldGNoCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgbXlEYXRhc2V0ID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKG15RGF0YXNldCk7IC8vCiAgICAgICAgICAgICAgICAvLyAvLyAuLi4KICAgICAgICAgICAgICAgIC8vCiAgICAgICAgICAgICAgICAvLyBsZXQgbXlDaGFuZ2VkRGF0YXNldCA9IG15RGF0YXNldAogICAgICAgICAgICAgICAgLy8gLy8gLy8gRm9yIGV4YW1wbGUsIHRoZSB1c2VyIG11c3QgYmUgc29tZW9uZSB3aXRoIFdyaXRlIGFjY2VzcyB0byB0aGUgc3BlY2lmaWVkIFVSTC4KICAgICAgICAgICAgICAgIC8vIGNvbnN0IHNhdmVkU29saWREYXRhc2V0ID0gYXdhaXQgc2F2ZVNvbGlkRGF0YXNldEF0KAogICAgICAgICAgICAgICAgLy8gICAiaHR0cHM6Ly9kb2NzLWV4YW1wbGUuaW5ydXB0Lm5ldC9wcm9maWxlL2NhcmQiLAogICAgICAgICAgICAgICAgLy8gICBteUNoYW5nZWREYXRhc2V0LCB7CiAgICAgICAgICAgICAgICAvLyAgICAgZmV0Y2g6IGZldGNoCiAgICAgICAgICAgICAgICAvLyAgIH0pOwogICAgICAgICAgICAgICAgLy8KICAgICAgICAgICAgICAgIC8vICAgY29uc29sZS5sb2coc2F2ZWRTb2xpZERhdGFzZXQpCgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["SolidFetchTest.vue"],"names":[],"mappings":";;;;;;;;;AASA;AAAA;AAAA,KAAA,EAAA;AAAA;AAAA,OAAA,oCAAA;AACA,SAAA;AAAA;AAAA,OAAA,sBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAGA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAIA,iBAAA,GAAA,IAAA,CAAA,KAJA;;AAAA;AAIA,gBAAA,KAJA;AAAA;AAAA,uBAMA,eAAA,EACA;AACA,gBAAA,KAFA,EAEA;AACA,kBAAA,KAAA,EAAA;AADA,iBAFA,CANA;;AAAA;AAMA,gBAAA,SANA;AAWA,gBAAA,OAAA,CAAA,GAAA,CAAA,SAAA,EAXA,CAYA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBA;AA1BA;AAHA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <b-button @click=\"test\">Test</b-button>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport {/* handleIncomingRedirect, login,*/ fetch, getDefaultSession,/* onSessionRestore*/ } from '@inrupt/solid-client-authn-browser'\r\nimport { getSolidDataset,/* saveSolidDatasetAt */} from \"@inrupt/solid-client\";\r\n\r\nexport default {\r\n  name: \"SolidFetchTest\",\r\n\r\n  methods: {\r\n    async test() {\r\n\r\n      // 3. Make authenticated requests by passing `fetch` to the solid-client functions.\r\n      // The user must have logged in as someone with the appropriate access to the specified URL.\r\nlet webId = await getDefaultSession().info.webId\r\n      // For example, the user must be someone with Read access to the specified URL.\r\n      const myDataset = await getSolidDataset(\r\n      //  \"https://docs-example.inrupt.net/profile/card\", {\r\n          webId, {\r\n          fetch: fetch\r\n        });\r\n        console.log(myDataset)\r\n        //\r\n        // // ...\r\n        //\r\n\r\n        // let myChangedDataset = myDataset\r\n        // // // For example, the user must be someone with Write access to the specified URL.\r\n        // const savedSolidDataset = await saveSolidDatasetAt(\r\n        //   \"https://docs-example.inrupt.net/profile/card\",\r\n        //   myChangedDataset, {\r\n        //     fetch: fetch\r\n        //   });\r\n        //\r\n        //   console.log(savedSolidDataset)\r\n        }\r\n      }\r\n    }\r\n    </script>\r\n\r\n    <style>\r\n\r\n    </style>\r\n"],"sourceRoot":"src/components/solid"}]}