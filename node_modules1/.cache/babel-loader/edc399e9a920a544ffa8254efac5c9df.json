{"remainingRequest":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Smag\\Documents\\dev\\bon-prix\\src\\components\\solid\\SolidFetchTest.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\src\\components\\solid\\SolidFetchTest.vue","mtime":1616420481993},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL1NtYWcvRG9jdW1lbnRzL2Rldi9ib24tcHJpeC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsKLyogaGFuZGxlSW5jb21pbmdSZWRpcmVjdCwgbG9naW4sKi8KZmV0Y2gsIGdldERlZmF1bHRTZXNzaW9uCi8qIG9uU2Vzc2lvblJlc3RvcmUqLwp9IGZyb20gJ0BpbnJ1cHQvc29saWQtY2xpZW50LWF1dGhuLWJyb3dzZXInOyAvL2ltcG9ydCB7IFNQQUNFIH0gZnJvbSAiQGlucnVwdC92b2NhYi1zb2xpZC1jb21tb24iOwoKaW1wb3J0IHsgRk9BRiwgU0NIRU1BX0lOUlVQVF9FWFQsIFZDQVJEIH0gZnJvbSAiQGlucnVwdC92b2NhYi1jb21tb24tcmRmIjsKaW1wb3J0IHsgZ2V0U29saWREYXRhc2V0LCBnZXRUaGluZywgZ2V0U3RyaW5nTm9Mb2NhbGUsIGdldFVybCwgZ2V0VXJsQWxsCi8qIHNhdmVTb2xpZERhdGFzZXRBdCAqLwp9IGZyb20gIkBpbnJ1cHQvc29saWQtY2xpZW50IjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJTb2xpZEZldGNoVGVzdCIsCiAgbWV0aG9kczogewogICAgdGVzdDogZnVuY3Rpb24gdGVzdCgpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgd2ViSWQsIHVzZXJEYXRhc2V0LCBwcm9maWxlLCBsYXN0TmFtZSwgZm5hbWUsIHJvbGUsIGZuLCBhY3F1YWludGFuY2VzLCBzdG9yYWdlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGdldERlZmF1bHRTZXNzaW9uKCkuaW5mby53ZWJJZDsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgd2ViSWQgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gZ2V0U29saWREYXRhc2V0KCAvLyAgImh0dHBzOi8vZG9jcy1leGFtcGxlLmlucnVwdC5uZXQvcHJvZmlsZS9jYXJkIiwgewogICAgICAgICAgICAgICAgd2ViSWQsIHsKICAgICAgICAgICAgICAgICAgZmV0Y2g6IGZldGNoCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgdXNlckRhdGFzZXQgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgY29uc29sZS5sb2codXNlckRhdGFzZXQpOwogICAgICAgICAgICAgICAgcHJvZmlsZSA9IGdldFRoaW5nKHVzZXJEYXRhc2V0LCB3ZWJJZCk7CiAgICAgICAgICAgICAgICBsYXN0TmFtZSA9IGdldFN0cmluZ05vTG9jYWxlKHByb2ZpbGUsIFNDSEVNQV9JTlJVUFRfRVhULmZhbWlseU5hbWUpOwogICAgICAgICAgICAgICAgZm5hbWUgPSBnZXRTdHJpbmdOb0xvY2FsZShwcm9maWxlLCBGT0FGLmZpcnN0TmFtZSk7CiAgICAgICAgICAgICAgICByb2xlID0gZ2V0U3RyaW5nTm9Mb2NhbGUocHJvZmlsZSwgVkNBUkQucm9sZSk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhsYXN0TmFtZSwgZm5hbWUsIHJvbGUpOyAvLyAzLiBSZXRyaWV2ZSBzcGVjaWZpYyBkYXRhIGZyb20gdGhlIHJldHJpZXZlZCB0aGluZzsgaS5lLiBwcm9maWxlLgogICAgICAgICAgICAgICAgLy8gM2EuIEdldCBhIHNpbmdsZSBzdHJpbmcgZGF0YSB2YWx1ZSBmcm9tIHRoZSBwcm9maWxlLgogICAgICAgICAgICAgICAgLy8gU3BlY2lmaWNhbGx5LCB0aGUgb3BlcmF0aW9uIHJldHVybnMgdGhlIHByb2ZpbGUncyBWQ0FSRC5mbgogICAgICAgICAgICAgICAgLy8gKGkuZS4sICJodHRwOi8vd3d3LnczLm9yZy8yMDA2L3ZjYXJkL25zI2ZuIikgdmFsdWUgYXMgYSBzdHJpbmcuCgogICAgICAgICAgICAgICAgZm4gPSBnZXRTdHJpbmdOb0xvY2FsZShwcm9maWxlLCBWQ0FSRC5mbik7IC8vIDNiLiBHZXQgbXVsdGlwbGUgVVJMIGRhdGEgZnJvbSB0aGUgcHJvZmlsZS4KICAgICAgICAgICAgICAgIC8vIFNwZWNpZmljYWxseSAsIHRoZSBvcGVyYXRpb24gcmV0dXJucyB0aGUgcHJvZmlsZSdzIEZPQUYua25vd3MKICAgICAgICAgICAgICAgIC8vIChpLmUuLCAiaHR0cDovL3htbG5zLmNvbS9mb2FmLzAuMS9rbm93cyIpIHZhbHVlcyBhcyBhbiBhcnJheSBvZiBVUkxzLgogICAgICAgICAgICAgICAgLy8gVGhlIFVSTHMgcG9pbnQgdG8gdGhlIFRoaW5ncyByZXByZXNlbnRpbmcgUGVyc29ucy4KCiAgICAgICAgICAgICAgICBhY3F1YWludGFuY2VzID0gZ2V0VXJsQWxsKHByb2ZpbGUsIEZPQUYua25vd3MpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZm4sIGFjcXVhaW50YW5jZXMpOyAvLyAgY29uc29sZS5sb2coIlNQQUNFIixTUEFDRSkKCiAgICAgICAgICAgICAgICBzdG9yYWdlID0gZ2V0VXJsKHByb2ZpbGUsICJodHRwOi8vd3d3LnczLm9yZy9ucy9waW0vc3BhY2Ujc3RvcmFnZSIpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coInN0b3JhZ2UiLCBzdG9yYWdlKTsgLy8KICAgICAgICAgICAgICAgIC8vIC8vIC4uLgogICAgICAgICAgICAgICAgLy8KICAgICAgICAgICAgICAgIC8vIGxldCBteUNoYW5nZWREYXRhc2V0ID0gdXNlckRhdGFzZXQKICAgICAgICAgICAgICAgIC8vIC8vIC8vIEZvciBleGFtcGxlLCB0aGUgdXNlciBtdXN0IGJlIHNvbWVvbmUgd2l0aCBXcml0ZSBhY2Nlc3MgdG8gdGhlIHNwZWNpZmllZCBVUkwuCiAgICAgICAgICAgICAgICAvLyBjb25zdCBzYXZlZFNvbGlkRGF0YXNldCA9IGF3YWl0IHNhdmVTb2xpZERhdGFzZXRBdCgKICAgICAgICAgICAgICAgIC8vICAgImh0dHBzOi8vZG9jcy1leGFtcGxlLmlucnVwdC5uZXQvcHJvZmlsZS9jYXJkIiwKICAgICAgICAgICAgICAgIC8vICAgbXlDaGFuZ2VkRGF0YXNldCwgewogICAgICAgICAgICAgICAgLy8gICAgIGZldGNoOiBmZXRjaAogICAgICAgICAgICAgICAgLy8gICB9KTsKICAgICAgICAgICAgICAgIC8vCiAgICAgICAgICAgICAgICAvLyAgIGNvbnNvbGUubG9nKHNhdmVkU29saWREYXRhc2V0KQoKICAgICAgICAgICAgICBjYXNlIDE3OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["SolidFetchTest.vue"],"names":[],"mappings":";;;;;;;;;AASA;AAAA;AAAA,KAAA,EAAA;AAAA;AAAA,OAAA,oCAAA,C,CAEA;;AACA,SAAA,IAAA,EAAA,iBAAA,EAAA,KAAA,QAAA,0BAAA;AAEA,SACA,eADA,EAEA,QAFA,EAGA,iBAHA,EAIA,MAJA,EAKA;AACA;AANA,OAOA,sBAPA;AASA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAGA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAIA,iBAAA,GAAA,IAAA,CAAA,KAJA;;AAAA;AAIA,gBAAA,KAJA;AAAA;AAAA,uBAMA,eAAA,EACA;AACA,gBAAA,KAFA,EAEA;AACA,kBAAA,KAAA,EAAA;AADA,iBAFA,CANA;;AAAA;AAMA,gBAAA,WANA;AAWA,gBAAA,OAAA,CAAA,GAAA,CAAA,WAAA;AAEA,gBAAA,OAbA,GAaA,QAAA,CACA,WADA,EAEA,KAFA,CAbA;AAkBA,gBAAA,QAlBA,GAkBA,iBAAA,CAAA,OAAA,EAAA,iBAAA,CAAA,UAAA,CAlBA;AAmBA,gBAAA,KAnBA,GAmBA,iBAAA,CAAA,OAAA,EAAA,IAAA,CAAA,SAAA,CAnBA;AAoBA,gBAAA,IApBA,GAoBA,iBAAA,CAAA,OAAA,EAAA,KAAA,CAAA,IAAA,CApBA;AAsBA,gBAAA,OAAA,CAAA,GAAA,CAAA,QAAA,EAAA,KAAA,EAAA,IAAA,EAtBA,CAwBA;AAEA;AACA;AACA;;AAEA,gBAAA,EA9BA,GA8BA,iBAAA,CAAA,OAAA,EAAA,KAAA,CAAA,EAAA,CA9BA,EAgCA;AACA;AACA;AACA;;AAEA,gBAAA,aArCA,GAqCA,SAAA,CAAA,OAAA,EAAA,IAAA,CAAA,KAAA,CArCA;AAuCA,gBAAA,OAAA,CAAA,GAAA,CAAA,EAAA,EAAA,aAAA,EAvCA,CAyCA;;AACA,gBAAA,OA1CA,GA0CA,MAAA,CAAA,OAAA,EAAA,wCAAA,CA1CA;AA2CA,gBAAA,OAAA,CAAA,GAAA,CAAA,SAAA,EAAA,OAAA,EA3CA,CA4CA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAxDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyDA;AA1DA;AAHA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <b-button @click=\"test\">Test</b-button>\r\n    see https://docs.inrupt.com/developer-tools/javascript/client-libraries/tutorial/read-write-data/\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport {/* handleIncomingRedirect, login,*/ fetch, getDefaultSession,/* onSessionRestore*/ } from '@inrupt/solid-client-authn-browser'\r\n\r\n//import { SPACE } from \"@inrupt/vocab-solid-common\";\r\nimport { FOAF, SCHEMA_INRUPT_EXT, VCARD } from \"@inrupt/vocab-common-rdf\";\r\n\r\nimport {\r\n  getSolidDataset,\r\n  getThing,\r\n  getStringNoLocale,\r\n  getUrl,\r\n  getUrlAll,\r\n  /* saveSolidDatasetAt */\r\n} from \"@inrupt/solid-client\";\r\n\r\nexport default {\r\n  name: \"SolidFetchTest\",\r\n\r\n  methods: {\r\n    async test() {\r\n\r\n      // 3. Make authenticated requests by passing `fetch` to the solid-client functions.\r\n      // The user must have logged in as someone with the appropriate access to the specified URL.\r\n      let webId = await getDefaultSession().info.webId\r\n      // For example, the user must be someone with Read access to the specified URL.\r\n      const userDataset = await getSolidDataset(\r\n        //  \"https://docs-example.inrupt.net/profile/card\", {\r\n        webId, {\r\n          fetch: fetch\r\n        });\r\n        console.log(userDataset)\r\n\r\n        const profile = getThing(\r\n          userDataset,\r\n          webId\r\n        );\r\n\r\n        const lastName = getStringNoLocale(profile, SCHEMA_INRUPT_EXT.familyName);\r\n        const fname = getStringNoLocale(profile, FOAF.firstName);\r\n        const role = getStringNoLocale(profile, VCARD.role);\r\n\r\n        console.log(lastName, fname, role)\r\n\r\n        // 3. Retrieve specific data from the retrieved thing; i.e. profile.\r\n\r\n        // 3a. Get a single string data value from the profile.\r\n        // Specifically, the operation returns the profile's VCARD.fn\r\n        // (i.e., \"http://www.w3.org/2006/vcard/ns#fn\") value as a string.\r\n\r\n        const fn = getStringNoLocale(profile, VCARD.fn);\r\n\r\n        // 3b. Get multiple URL data from the profile.\r\n        // Specifically , the operation returns the profile's FOAF.knows\r\n        // (i.e., \"http://xmlns.com/foaf/0.1/knows\") values as an array of URLs.\r\n        // The URLs point to the Things representing Persons.\r\n\r\n        const acquaintances = getUrlAll(profile, FOAF.knows);\r\n\r\n        console.log(fn, acquaintances)\r\n\r\n      //  console.log(\"SPACE\",SPACE)\r\n        let storage = getUrl(profile, \"http://www.w3.org/ns/pim/space#storage\");\r\n        console.log(\"storage\", storage)\r\n        //\r\n        // // ...\r\n        //\r\n\r\n        // let myChangedDataset = userDataset\r\n        // // // For example, the user must be someone with Write access to the specified URL.\r\n        // const savedSolidDataset = await saveSolidDatasetAt(\r\n        //   \"https://docs-example.inrupt.net/profile/card\",\r\n        //   myChangedDataset, {\r\n        //     fetch: fetch\r\n        //   });\r\n        //\r\n        //   console.log(savedSolidDataset)\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n\r\n  <style>\r\n\r\n  </style>\r\n"],"sourceRoot":"src/components/solid"}]}