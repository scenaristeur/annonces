{"remainingRequest":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Smag\\Documents\\dev\\bon-prix\\src\\components\\solid\\SolidLoginButton.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\src\\components\\solid\\SolidLoginButton.vue","mtime":1616416053405},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL1NtYWcvRG9jdW1lbnRzL2Rldi9ib24tcHJpeC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgaGFuZGxlSW5jb21pbmdSZWRpcmVjdCwgbG9naW4KLypmZXRjaCwqLwosIGdldERlZmF1bHRTZXNzaW9uLCBvblNlc3Npb25SZXN0b3JlIH0gZnJvbSAnQGlucnVwdC9zb2xpZC1jbGllbnQtYXV0aG4tYnJvd3Nlcic7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnU29saWRMb2dpbkJ1dHRvbicsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHdlYklkOiBudWxsCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBfdGhpcy5jaGVja1Nlc3Npb24oKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBvblNlc3Npb25SZXN0b3JlKGZ1bmN0aW9uICh1cmwpIHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHVybCk7CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBjaGVja1Nlc3Npb246IGZ1bmN0aW9uIGNoZWNrU2Vzc2lvbigpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZUluY29taW5nUmVkaXJlY3QoewogICAgICAgICAgICAgICAgICByZXN0b3JlUHJldmlvdXNTZXNzaW9uOiB0cnVlCiAgICAgICAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChpbmZvKSB7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJMb2dnZWQgaW4gd2l0aCBXZWJJRCBbIi5jb25jYXQoaW5mby53ZWJJZCwgIl0iKSk7CiAgICAgICAgICAgICAgICAgIF90aGlzMi53ZWJJZCA9IGluZm8ud2ViSWQ7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgbG9naW5BbmRGZXRjaDogZnVuY3Rpb24gbG9naW5BbmRGZXRjaCgpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGlmIChnZXREZWZhdWx0U2Vzc2lvbigpLmluZm8uaXNMb2dnZWRJbikgewogICAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDM7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBsb2dpbih7CiAgICAgICAgICAgICAgICAgIC8vIFNwZWNpZnkgdGhlIFVSTCBvZiB0aGUgdXNlcidzIFNvbGlkIElkZW50aXR5IFByb3ZpZGVyOyBlLmcuLCAiaHR0cHM6Ly9pbnJ1cHQubmV0IgogICAgICAgICAgICAgICAgICBvaWRjSXNzdWVyOiAiaHR0cHM6Ly9pbnJ1cHQubmV0IiwKICAgICAgICAgICAgICAgICAgLy8gU3BlY2lmeSB0aGUgVVJMIHRoZSBTb2xpZCBJZGVudGl0eSBQcm92aWRlciBzaG91bGQgcmVkaXJlY3QgdG8gYWZ0ZXIgdGhlIHVzZXIgbG9ncyBpbiwKICAgICAgICAgICAgICAgICAgLy8gZS5nLiwgdGhlIGN1cnJlbnQgcGFnZSBmb3IgYSBzaW5nbGUtcGFnZSBhcHAuCiAgICAgICAgICAgICAgICAgIHJlZGlyZWN0VXJsOiB3aW5kb3cubG9jYXRpb24uaHJlZiwKICAgICAgICAgICAgICAgICAgcmVzdG9yZVByZXZpb3VzU2Vzc2lvbjogdHJ1ZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGxvZ2luOiBmdW5jdGlvbiBsb2dpbigpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXMzLmxvZ2luQW5kRmV0Y2goKTsgLy8gbGV0IHNlc3Npb24gPSBhd2FpdCBhdXRoLmN1cnJlbnRTZXNzaW9uKCk7CiAgICAgICAgICAgICAgICAvLyBsZXQgcG9wdXBVcmkgPSAnaHR0cHM6Ly9zb2xpZGNvbW11bml0eS5uZXQvY29tbW9uL3BvcHVwLmh0bWwnOwogICAgICAgICAgICAgICAgLy8gaWYgKCFzZXNzaW9uKXsKICAgICAgICAgICAgICAgIC8vICAgc2Vzc2lvbiA9IGF3YWl0IGF1dGgucG9wdXBMb2dpbih7IHBvcHVwVXJpIH0pOwogICAgICAgICAgICAgICAgLy8gfQogICAgICAgICAgICAgICAgLy8gdGhpcy53ZWJJZCA9IHNlc3Npb24ud2ViSWQKCgogICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNCk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGxvZ291dDogZnVuY3Rpb24gbG9nb3V0KCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU1KCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNSQoX2NvbnRleHQ1KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NS5wcmV2ID0gX2NvbnRleHQ1Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gZ2V0RGVmYXVsdFNlc3Npb24oKS5sb2dvdXQoKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNC5jaGVja1Nlc3Npb24oKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU1KTsKICAgICAgfSkpKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["SolidLoginButton.vue"],"names":[],"mappings":";;;;;;;;;;AASA,SAAA,sBAAA,EAAA;AAAA;AAAA,EAAA,iBAAA,EAAA,gBAAA,QAAA,oCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAEA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,OAPA,qBAOA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,KAAA,CAAA,YAAA,EADA;;AAAA;AAEA,cAAA,gBAAA,CAAA,UAAA,GAAA,EAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,eAFA,CAAA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,GAZA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAQA,sBAAA,CAAA;AACA,kBAAA,sBAAA,EAAA;AADA,iBAAA,CAAA,CAEA,IAFA,CAEA,UAAA,IAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,iCAAA,IAAA,CAAA,KAAA;AACA,kBAAA,MAAA,CAAA,KAAA,GAAA,IAAA,CAAA,KAAA;AACA,iBALA,CARA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA,KAfA;AAgBA,IAAA,aAhBA,2BAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGA,iBAAA,GAAA,IAAA,CAAA,UAHA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAMA,KAAA,CAAA;AACA;AACA,kBAAA,UAAA,EAAA,oBAFA;AAGA;AACA;AACA,kBAAA,WAAA,EAAA,MAAA,CAAA,QAAA,CAAA,IALA;AAMA,kBAAA,sBAAA,EAAA;AANA,iBAAA,CANA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,KAhCA;AAkCA,IAAA,KAlCA,mBAkCA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MAAA,CAAA,aAAA,GADA,CAEA;AACA;AACA;AACA;AACA;AACA;;;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,KA1CA;AA2CA,IAAA,MA3CA,oBA2CA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,iBAAA,GAAA,MAAA,EADA;;AAAA;AAAA;AAAA,uBAEA,MAAA,CAAA,YAAA,EAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAjDA;AAbA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    {{ webId }}\r\n    <b-button variant=\"success\" v-if=\"webId == null\" @click=\"login\">Login</b-button>\r\n    <b-button variant=\"danger\" v-else @click=\"logout\">Logout</b-button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { handleIncomingRedirect, login, /*fetch,*/ getDefaultSession, onSessionRestore } from '@inrupt/solid-client-authn-browser'\r\n\r\nexport default {\r\n  name: 'SolidLoginButton',\r\n  data: function () {\r\n    return {\r\n      webId: null\r\n    }\r\n  },\r\n  async mounted(){\r\n    await this.checkSession()\r\n    onSessionRestore((url) => {\r\n      console.log(url)\r\n    });\r\n  },\r\n  methods: {\r\n    async checkSession(){\r\n      // 1. Call the handleIncomingRedirect() function to complete the authentication process.\r\n      //   If the page is being loaded after the redirect from the Solid Identity Provider\r\n      //      (i.e., part of the authentication flow), the user's credentials are stored in-memory, and\r\n      //      the login process is complete. That is, a session is logged in\r\n      //      only after it handles the incoming redirect from the Solid Identity Provider.\r\n      //   If the page is not being loaded after a redirect from the Solid Identity Provider,\r\n      //      nothing happens.\r\n      await  handleIncomingRedirect({\r\n        restorePreviousSession: true\r\n      }).then((info) => {\r\n        console.log(`Logged in with WebID [${info.webId}]`)\r\n        this.webId = info.webId\r\n      })\r\n    },\r\n    async loginAndFetch() {\r\n\r\n      // 2. Start the Login Process if not already logged in.\r\n      if (!getDefaultSession().info.isLoggedIn) {\r\n        // The `login()` redirects the user to their identity provider;\r\n        // i.e., moves the user away from the current page.\r\n        await login({\r\n          // Specify the URL of the user's Solid Identity Provider; e.g., \"https://inrupt.net\"\r\n          oidcIssuer: \"https://inrupt.net\",\r\n          // Specify the URL the Solid Identity Provider should redirect to after the user logs in,\r\n          // e.g., the current page for a single-page app.\r\n          redirectUrl: window.location.href,\r\n          restorePreviousSession: true\r\n        });\r\n      }\r\n\r\n        },\r\n\r\n        async login() {\r\n          this.loginAndFetch();\r\n          // let session = await auth.currentSession();\r\n          // let popupUri = 'https://solidcommunity.net/common/popup.html';\r\n          // if (!session){\r\n          //   session = await auth.popupLogin({ popupUri });\r\n          // }\r\n          // this.webId = session.webId\r\n        },\r\n        async logout(){\r\n          await getDefaultSession().logout()\r\n          await this.checkSession()\r\n\r\n          // await  auth.logout()\r\n          // this.webId = null\r\n        },\r\n      }\r\n    }\r\n    </script>\r\n"],"sourceRoot":"src/components/solid"}]}