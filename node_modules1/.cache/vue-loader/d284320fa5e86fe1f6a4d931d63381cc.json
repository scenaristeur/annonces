{"remainingRequest":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Smag\\Documents\\dev\\bon-prix\\src\\components\\solid\\SolidFetchTest.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\src\\components\\solid\\SolidFetchTest.vue","mtime":1616416346545},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KDQoNCmltcG9ydCB7LyogaGFuZGxlSW5jb21pbmdSZWRpcmVjdCwgbG9naW4sKi8gZmV0Y2gsIGdldERlZmF1bHRTZXNzaW9uLC8qIG9uU2Vzc2lvblJlc3RvcmUqLyB9IGZyb20gJ0BpbnJ1cHQvc29saWQtY2xpZW50LWF1dGhuLWJyb3dzZXInDQppbXBvcnQgeyBnZXRTb2xpZERhdGFzZXQsLyogc2F2ZVNvbGlkRGF0YXNldEF0ICovfSBmcm9tICJAaW5ydXB0L3NvbGlkLWNsaWVudCI7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogIlNvbGlkRmV0Y2hUZXN0IiwNCg0KICBtZXRob2RzOiB7DQogICAgYXN5bmMgdGVzdCgpIHsNCg0KICAgICAgLy8gMy4gTWFrZSBhdXRoZW50aWNhdGVkIHJlcXVlc3RzIGJ5IHBhc3NpbmcgYGZldGNoYCB0byB0aGUgc29saWQtY2xpZW50IGZ1bmN0aW9ucy4NCiAgICAgIC8vIFRoZSB1c2VyIG11c3QgaGF2ZSBsb2dnZWQgaW4gYXMgc29tZW9uZSB3aXRoIHRoZSBhcHByb3ByaWF0ZSBhY2Nlc3MgdG8gdGhlIHNwZWNpZmllZCBVUkwuDQpsZXQgd2ViSWQgPSBhd2FpdCBnZXREZWZhdWx0U2Vzc2lvbigpLmluZm8ud2ViSWQNCiAgICAgIC8vIEZvciBleGFtcGxlLCB0aGUgdXNlciBtdXN0IGJlIHNvbWVvbmUgd2l0aCBSZWFkIGFjY2VzcyB0byB0aGUgc3BlY2lmaWVkIFVSTC4NCiAgICAgIGNvbnN0IG15RGF0YXNldCA9IGF3YWl0IGdldFNvbGlkRGF0YXNldCgNCiAgICAgIC8vICAiaHR0cHM6Ly9kb2NzLWV4YW1wbGUuaW5ydXB0Lm5ldC9wcm9maWxlL2NhcmQiLCB7DQogICAgICAgICAgd2ViSWQsIHsNCiAgICAgICAgICBmZXRjaDogZmV0Y2gNCiAgICAgICAgfSk7DQogICAgICAgIGNvbnNvbGUubG9nKG15RGF0YXNldCkNCiAgICAgICAgLy8NCiAgICAgICAgLy8gLy8gLi4uDQogICAgICAgIC8vDQoNCiAgICAgICAgLy8gbGV0IG15Q2hhbmdlZERhdGFzZXQgPSBteURhdGFzZXQNCiAgICAgICAgLy8gLy8gLy8gRm9yIGV4YW1wbGUsIHRoZSB1c2VyIG11c3QgYmUgc29tZW9uZSB3aXRoIFdyaXRlIGFjY2VzcyB0byB0aGUgc3BlY2lmaWVkIFVSTC4NCiAgICAgICAgLy8gY29uc3Qgc2F2ZWRTb2xpZERhdGFzZXQgPSBhd2FpdCBzYXZlU29saWREYXRhc2V0QXQoDQogICAgICAgIC8vICAgImh0dHBzOi8vZG9jcy1leGFtcGxlLmlucnVwdC5uZXQvcHJvZmlsZS9jYXJkIiwNCiAgICAgICAgLy8gICBteUNoYW5nZWREYXRhc2V0LCB7DQogICAgICAgIC8vICAgICBmZXRjaDogZmV0Y2gNCiAgICAgICAgLy8gICB9KTsNCiAgICAgICAgLy8NCiAgICAgICAgLy8gICBjb25zb2xlLmxvZyhzYXZlZFNvbGlkRGF0YXNldCkNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0NCiAgICA="},{"version":3,"sources":["SolidFetchTest.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SolidFetchTest.vue","sourceRoot":"src/components/solid","sourcesContent":["<template>\r\n  <div>\r\n    <b-button @click=\"test\">Test</b-button>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport {/* handleIncomingRedirect, login,*/ fetch, getDefaultSession,/* onSessionRestore*/ } from '@inrupt/solid-client-authn-browser'\r\nimport { getSolidDataset,/* saveSolidDatasetAt */} from \"@inrupt/solid-client\";\r\n\r\nexport default {\r\n  name: \"SolidFetchTest\",\r\n\r\n  methods: {\r\n    async test() {\r\n\r\n      // 3. Make authenticated requests by passing `fetch` to the solid-client functions.\r\n      // The user must have logged in as someone with the appropriate access to the specified URL.\r\nlet webId = await getDefaultSession().info.webId\r\n      // For example, the user must be someone with Read access to the specified URL.\r\n      const myDataset = await getSolidDataset(\r\n      //  \"https://docs-example.inrupt.net/profile/card\", {\r\n          webId, {\r\n          fetch: fetch\r\n        });\r\n        console.log(myDataset)\r\n        //\r\n        // // ...\r\n        //\r\n\r\n        // let myChangedDataset = myDataset\r\n        // // // For example, the user must be someone with Write access to the specified URL.\r\n        // const savedSolidDataset = await saveSolidDatasetAt(\r\n        //   \"https://docs-example.inrupt.net/profile/card\",\r\n        //   myChangedDataset, {\r\n        //     fetch: fetch\r\n        //   });\r\n        //\r\n        //   console.log(savedSolidDataset)\r\n        }\r\n      }\r\n    }\r\n    </script>\r\n\r\n    <style>\r\n\r\n    </style>\r\n"]}]}