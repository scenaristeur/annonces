{"remainingRequest":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Smag\\Documents\\dev\\bon-prix\\src\\components\\annonce\\AnnonceAgora.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\src\\components\\annonce\\AnnonceAgora.vue","mtime":1616528494708},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQoNCg0KaW1wb3J0IGF1dGggZnJvbSAnc29saWQtYXV0aC1jbGllbnQnOw0KaW1wb3J0IEZDIGZyb20gJ3NvbGlkLWZpbGUtY2xpZW50Jw0KY29uc3QgZmMgPSBuZXcgRkMoIGF1dGggKQ0KbGV0IGxkZmxleCA9IHdpbmRvdy5zb2xpZA0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJBbm5vbmNlQWdvcmEiLA0KICBjb21wb25lbnRzOiB7DQogICAgJ0Fubm9uY2VMaW5lJzogKCkgPT4gaW1wb3J0KCdAL2NvbXBvbmVudHMvYW5ub25jZS9Bbm5vbmNlTGluZScpLA0KICB9LA0KICBkYXRhKCl7DQogICAgcmV0dXJuIHsNCiAgICAgIHRlbXBfdXJsOiB0aGlzLiRzdG9yZS5zdGF0ZS5hbm5vbmNlLmFnb3JhX3VybCwNCiAgICAgIGFubm9uY2VzIDogW10NCiAgICB9DQogIH0sDQogIGNyZWF0ZWQoKXsNCiAgICB0aGlzLmxvYWQoKQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgYXN5bmMgIGxvYWQoKSB7DQogICAgICB0aGlzLmFnb3JhX3VybCA9IHRoaXMudGVtcF91cmwNCiAgICAgIGxldCBkYXRlID0gbmV3IERhdGUoKQ0KICAgICAgbGV0IHBhdGggPSBbdGhpcy5hZ29yYV91cmwrZGF0ZS5nZXRGdWxsWWVhcigpLCAoIjAiICsgKGRhdGUuZ2V0TW9udGgoKSArIDEpKS5zbGljZSgtMildLmpvaW4oIi8iKQ0KICAgICAgbGV0IGZvbGRlciA9IGF3YWl0IGZjLnJlYWRGb2xkZXIocGF0aCkNCiAgICAgIGNvbnNvbGUubG9nKGZvbGRlcikNCiAgICAgIGxldCBmaWxlcyA9IGZvbGRlci5maWxlcy5zb3J0KChhLGIpID0+IG5ldyBEYXRlKGIubW9kaWZpZWQpLmdldFRpbWUoKSAtIG5ldyBEYXRlKGEubW9kaWZpZWQpLmdldFRpbWUoKSk7DQogICAgICBjb25zb2xlLmxvZyhmaWxlcykNCiAgICAgIHRoaXMuYW5ub25jZXMgPSBbXQ0KDQogICAgICB3aGlsZSAodGhpcy5hbm5vbmNlcy5sZW5ndGggPCAxMDAgJiYgZmlsZXMubGVuZ3RoID4gMCl7DQogICAgICAgIGxldCBmID0gZmlsZXMuc2hpZnQoKQ0KICAgICAgICBjb25zb2xlLmxvZyhmKQ0KICAgICAgICBsZXQgcmVzb3VyY2UgPSBmLnVybCsiI3RoaXMiDQogICAgICAgIGZvciBhd2FpdCAoY29uc3QgYW5ub25jZV91cmwgb2YgbGRmbGV4LmRhdGFbcmVzb3VyY2VdWydodHRwOi8vcHVybC5vcmcvZGMvdGVybXMvaGFzUGFydCddKXsNCiAgICAgICAgICBsZXQgaWR4ID0gdGhpcy5hbm5vbmNlcy5maW5kSW5kZXgoeCA9PiB4LnVybCA9PT0gYCR7YW5ub25jZV91cmx9YCkNCiAgICAgICAgICBpZiAoaWR4ID09PSAtMSkgew0KICAgICAgICAgICAgdGhpcy5hbm5vbmNlcy5wdXNoKHt1cmw6IGAke2Fubm9uY2VfdXJsfWB9KQ0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgfQ0KDQogICAgICAvLyBmb3IgYXdhaXQgKGNvbnN0IGYgb2YgZm9sZGVyLmZpbGVzKSB7DQogICAgICAvLyAgIGFubm9uY2VzLnB1c2goSlNPTi5wYXJzZShhd2FpdCBmYy5yZWFkRmlsZShmLnVybCkpKQ0KICAgICAgLy8gfQ0KICAgICAgLy8gIGF3YWl0IGZvbGRlci5maWxlcy5tYXAoIGZ1bmN0aW9uKHgpIHsNCiAgICAgIC8vICAgbGV0IGYgPSAgZmMucmVhZEZpbGUoeC51cmwpDQogICAgICAvLyAgIHJldHVybiBgJHtmfWANCiAgICAgIC8vIH0pDQogICAgICBjb25zb2xlLmxvZyh0aGlzLmFubm9uY2VzKQ0KICAgIH0NCiAgfSwNCg0KICB3YXRjaDp7DQogICAgYWdvcmFfdXJsKCl7DQogICAgICBjb25zb2xlLmxvZyh0aGlzLmFnb3JhX3VybCkNCiAgICAgIHRoaXMudGVtcF91cmwgPSB0aGlzLmFnb3JhX3VybA0KDQogICAgfQ0KICB9LA0KDQogIGNvbXB1dGVkOnsNCiAgICBhZ29yYV91cmw6IHsNCiAgICAgIGdldCAoKSB7IHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5hbm5vbmNlLmFnb3JhX3VybH0sDQogICAgICBzZXQgKHVybCkgeyB0aGlzLiRzdG9yZS5jb21taXQoJ2Fubm9uY2Uvc2V0QWdvcmFVcmwnLCB1cmwpIH0NCiAgICB9DQoNCiAgfSwNCg0KfQ0K"},{"version":3,"sources":["AnnonceAgora.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA","file":"AnnonceAgora.vue","sourceRoot":"src/components/annonce","sourcesContent":["<template>\r\n  <div>\r\n\r\n    <b-input-group class=\"mt-3\">\r\n      <b-input v-model=\"temp_url\" />\r\n      <b-input-group-append>\r\n        <b-button variant=\"outline-success\" @click=\"load\">Load</b-button>\r\n\r\n      </b-input-group-append>\r\n    </b-input-group>\r\n    Agora's Annonces\r\n\r\n <b-card-group columns>\r\n<AnnonceLine :annonce=\"a\" v-for=\"a in annonces\" :key=\"a.url\" />\r\n\r\n </b-card-group>\r\n\r\n\r\n    <!-- <b-list-group>\r\n      <b-list-group-item button v-for=\"a in annonces\" :key=\"a.url\">\r\n        <AnnonceLine :annonce=\"a\" />\r\n      </b-list-group-item>\r\n\r\n\r\n    </b-list-group> -->\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport auth from 'solid-auth-client';\r\nimport FC from 'solid-file-client'\r\nconst fc = new FC( auth )\r\nlet ldflex = window.solid\r\n\r\nexport default {\r\n  name: \"AnnonceAgora\",\r\n  components: {\r\n    'AnnonceLine': () => import('@/components/annonce/AnnonceLine'),\r\n  },\r\n  data(){\r\n    return {\r\n      temp_url: this.$store.state.annonce.agora_url,\r\n      annonces : []\r\n    }\r\n  },\r\n  created(){\r\n    this.load()\r\n  },\r\n  methods: {\r\n    async  load() {\r\n      this.agora_url = this.temp_url\r\n      let date = new Date()\r\n      let path = [this.agora_url+date.getFullYear(), (\"0\" + (date.getMonth() + 1)).slice(-2)].join(\"/\")\r\n      let folder = await fc.readFolder(path)\r\n      console.log(folder)\r\n      let files = folder.files.sort((a,b) => new Date(b.modified).getTime() - new Date(a.modified).getTime());\r\n      console.log(files)\r\n      this.annonces = []\r\n\r\n      while (this.annonces.length < 100 && files.length > 0){\r\n        let f = files.shift()\r\n        console.log(f)\r\n        let resource = f.url+\"#this\"\r\n        for await (const annonce_url of ldflex.data[resource]['http://purl.org/dc/terms/hasPart']){\r\n          let idx = this.annonces.findIndex(x => x.url === `${annonce_url}`)\r\n          if (idx === -1) {\r\n            this.annonces.push({url: `${annonce_url}`})\r\n          }\r\n        }\r\n      }\r\n\r\n      // for await (const f of folder.files) {\r\n      //   annonces.push(JSON.parse(await fc.readFile(f.url)))\r\n      // }\r\n      //  await folder.files.map( function(x) {\r\n      //   let f =  fc.readFile(x.url)\r\n      //   return `${f}`\r\n      // })\r\n      console.log(this.annonces)\r\n    }\r\n  },\r\n\r\n  watch:{\r\n    agora_url(){\r\n      console.log(this.agora_url)\r\n      this.temp_url = this.agora_url\r\n\r\n    }\r\n  },\r\n\r\n  computed:{\r\n    agora_url: {\r\n      get () { return this.$store.state.annonce.agora_url},\r\n      set (url) { this.$store.commit('annonce/setAgoraUrl', url) }\r\n    }\r\n\r\n  },\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n"]}]}