{"remainingRequest":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Smag\\Documents\\dev\\bon-prix\\src\\components\\solid\\SolidFetchTest.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\src\\components\\solid\\SolidFetchTest.vue","mtime":1616420481993},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Smag\\Documents\\dev\\bon-prix\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KDQoNCmltcG9ydCB7LyogaGFuZGxlSW5jb21pbmdSZWRpcmVjdCwgbG9naW4sKi8gZmV0Y2gsIGdldERlZmF1bHRTZXNzaW9uLC8qIG9uU2Vzc2lvblJlc3RvcmUqLyB9IGZyb20gJ0BpbnJ1cHQvc29saWQtY2xpZW50LWF1dGhuLWJyb3dzZXInDQoNCi8vaW1wb3J0IHsgU1BBQ0UgfSBmcm9tICJAaW5ydXB0L3ZvY2FiLXNvbGlkLWNvbW1vbiI7DQppbXBvcnQgeyBGT0FGLCBTQ0hFTUFfSU5SVVBUX0VYVCwgVkNBUkQgfSBmcm9tICJAaW5ydXB0L3ZvY2FiLWNvbW1vbi1yZGYiOw0KDQppbXBvcnQgew0KICBnZXRTb2xpZERhdGFzZXQsDQogIGdldFRoaW5nLA0KICBnZXRTdHJpbmdOb0xvY2FsZSwNCiAgZ2V0VXJsLA0KICBnZXRVcmxBbGwsDQogIC8qIHNhdmVTb2xpZERhdGFzZXRBdCAqLw0KfSBmcm9tICJAaW5ydXB0L3NvbGlkLWNsaWVudCI7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogIlNvbGlkRmV0Y2hUZXN0IiwNCg0KICBtZXRob2RzOiB7DQogICAgYXN5bmMgdGVzdCgpIHsNCg0KICAgICAgLy8gMy4gTWFrZSBhdXRoZW50aWNhdGVkIHJlcXVlc3RzIGJ5IHBhc3NpbmcgYGZldGNoYCB0byB0aGUgc29saWQtY2xpZW50IGZ1bmN0aW9ucy4NCiAgICAgIC8vIFRoZSB1c2VyIG11c3QgaGF2ZSBsb2dnZWQgaW4gYXMgc29tZW9uZSB3aXRoIHRoZSBhcHByb3ByaWF0ZSBhY2Nlc3MgdG8gdGhlIHNwZWNpZmllZCBVUkwuDQogICAgICBsZXQgd2ViSWQgPSBhd2FpdCBnZXREZWZhdWx0U2Vzc2lvbigpLmluZm8ud2ViSWQNCiAgICAgIC8vIEZvciBleGFtcGxlLCB0aGUgdXNlciBtdXN0IGJlIHNvbWVvbmUgd2l0aCBSZWFkIGFjY2VzcyB0byB0aGUgc3BlY2lmaWVkIFVSTC4NCiAgICAgIGNvbnN0IHVzZXJEYXRhc2V0ID0gYXdhaXQgZ2V0U29saWREYXRhc2V0KA0KICAgICAgICAvLyAgImh0dHBzOi8vZG9jcy1leGFtcGxlLmlucnVwdC5uZXQvcHJvZmlsZS9jYXJkIiwgew0KICAgICAgICB3ZWJJZCwgew0KICAgICAgICAgIGZldGNoOiBmZXRjaA0KICAgICAgICB9KTsNCiAgICAgICAgY29uc29sZS5sb2codXNlckRhdGFzZXQpDQoNCiAgICAgICAgY29uc3QgcHJvZmlsZSA9IGdldFRoaW5nKA0KICAgICAgICAgIHVzZXJEYXRhc2V0LA0KICAgICAgICAgIHdlYklkDQogICAgICAgICk7DQoNCiAgICAgICAgY29uc3QgbGFzdE5hbWUgPSBnZXRTdHJpbmdOb0xvY2FsZShwcm9maWxlLCBTQ0hFTUFfSU5SVVBUX0VYVC5mYW1pbHlOYW1lKTsNCiAgICAgICAgY29uc3QgZm5hbWUgPSBnZXRTdHJpbmdOb0xvY2FsZShwcm9maWxlLCBGT0FGLmZpcnN0TmFtZSk7DQogICAgICAgIGNvbnN0IHJvbGUgPSBnZXRTdHJpbmdOb0xvY2FsZShwcm9maWxlLCBWQ0FSRC5yb2xlKTsNCg0KICAgICAgICBjb25zb2xlLmxvZyhsYXN0TmFtZSwgZm5hbWUsIHJvbGUpDQoNCiAgICAgICAgLy8gMy4gUmV0cmlldmUgc3BlY2lmaWMgZGF0YSBmcm9tIHRoZSByZXRyaWV2ZWQgdGhpbmc7IGkuZS4gcHJvZmlsZS4NCg0KICAgICAgICAvLyAzYS4gR2V0IGEgc2luZ2xlIHN0cmluZyBkYXRhIHZhbHVlIGZyb20gdGhlIHByb2ZpbGUuDQogICAgICAgIC8vIFNwZWNpZmljYWxseSwgdGhlIG9wZXJhdGlvbiByZXR1cm5zIHRoZSBwcm9maWxlJ3MgVkNBUkQuZm4NCiAgICAgICAgLy8gKGkuZS4sICJodHRwOi8vd3d3LnczLm9yZy8yMDA2L3ZjYXJkL25zI2ZuIikgdmFsdWUgYXMgYSBzdHJpbmcuDQoNCiAgICAgICAgY29uc3QgZm4gPSBnZXRTdHJpbmdOb0xvY2FsZShwcm9maWxlLCBWQ0FSRC5mbik7DQoNCiAgICAgICAgLy8gM2IuIEdldCBtdWx0aXBsZSBVUkwgZGF0YSBmcm9tIHRoZSBwcm9maWxlLg0KICAgICAgICAvLyBTcGVjaWZpY2FsbHkgLCB0aGUgb3BlcmF0aW9uIHJldHVybnMgdGhlIHByb2ZpbGUncyBGT0FGLmtub3dzDQogICAgICAgIC8vIChpLmUuLCAiaHR0cDovL3htbG5zLmNvbS9mb2FmLzAuMS9rbm93cyIpIHZhbHVlcyBhcyBhbiBhcnJheSBvZiBVUkxzLg0KICAgICAgICAvLyBUaGUgVVJMcyBwb2ludCB0byB0aGUgVGhpbmdzIHJlcHJlc2VudGluZyBQZXJzb25zLg0KDQogICAgICAgIGNvbnN0IGFjcXVhaW50YW5jZXMgPSBnZXRVcmxBbGwocHJvZmlsZSwgRk9BRi5rbm93cyk7DQoNCiAgICAgICAgY29uc29sZS5sb2coZm4sIGFjcXVhaW50YW5jZXMpDQoNCiAgICAgIC8vICBjb25zb2xlLmxvZygiU1BBQ0UiLFNQQUNFKQ0KICAgICAgICBsZXQgc3RvcmFnZSA9IGdldFVybChwcm9maWxlLCAiaHR0cDovL3d3dy53My5vcmcvbnMvcGltL3NwYWNlI3N0b3JhZ2UiKTsNCiAgICAgICAgY29uc29sZS5sb2coInN0b3JhZ2UiLCBzdG9yYWdlKQ0KICAgICAgICAvLw0KICAgICAgICAvLyAvLyAuLi4NCiAgICAgICAgLy8NCg0KICAgICAgICAvLyBsZXQgbXlDaGFuZ2VkRGF0YXNldCA9IHVzZXJEYXRhc2V0DQogICAgICAgIC8vIC8vIC8vIEZvciBleGFtcGxlLCB0aGUgdXNlciBtdXN0IGJlIHNvbWVvbmUgd2l0aCBXcml0ZSBhY2Nlc3MgdG8gdGhlIHNwZWNpZmllZCBVUkwuDQogICAgICAgIC8vIGNvbnN0IHNhdmVkU29saWREYXRhc2V0ID0gYXdhaXQgc2F2ZVNvbGlkRGF0YXNldEF0KA0KICAgICAgICAvLyAgICJodHRwczovL2RvY3MtZXhhbXBsZS5pbnJ1cHQubmV0L3Byb2ZpbGUvY2FyZCIsDQogICAgICAgIC8vICAgbXlDaGFuZ2VkRGF0YXNldCwgew0KICAgICAgICAvLyAgICAgZmV0Y2g6IGZldGNoDQogICAgICAgIC8vICAgfSk7DQogICAgICAgIC8vDQogICAgICAgIC8vICAgY29uc29sZS5sb2coc2F2ZWRTb2xpZERhdGFzZXQpDQogICAgICB9DQogICAgfQ0KICB9DQogIA=="},{"version":3,"sources":["SolidFetchTest.vue"],"names":[],"mappings":";;;;;;;;;AASA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SolidFetchTest.vue","sourceRoot":"src/components/solid","sourcesContent":["<template>\r\n  <div>\r\n    <b-button @click=\"test\">Test</b-button>\r\n    see https://docs.inrupt.com/developer-tools/javascript/client-libraries/tutorial/read-write-data/\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport {/* handleIncomingRedirect, login,*/ fetch, getDefaultSession,/* onSessionRestore*/ } from '@inrupt/solid-client-authn-browser'\r\n\r\n//import { SPACE } from \"@inrupt/vocab-solid-common\";\r\nimport { FOAF, SCHEMA_INRUPT_EXT, VCARD } from \"@inrupt/vocab-common-rdf\";\r\n\r\nimport {\r\n  getSolidDataset,\r\n  getThing,\r\n  getStringNoLocale,\r\n  getUrl,\r\n  getUrlAll,\r\n  /* saveSolidDatasetAt */\r\n} from \"@inrupt/solid-client\";\r\n\r\nexport default {\r\n  name: \"SolidFetchTest\",\r\n\r\n  methods: {\r\n    async test() {\r\n\r\n      // 3. Make authenticated requests by passing `fetch` to the solid-client functions.\r\n      // The user must have logged in as someone with the appropriate access to the specified URL.\r\n      let webId = await getDefaultSession().info.webId\r\n      // For example, the user must be someone with Read access to the specified URL.\r\n      const userDataset = await getSolidDataset(\r\n        //  \"https://docs-example.inrupt.net/profile/card\", {\r\n        webId, {\r\n          fetch: fetch\r\n        });\r\n        console.log(userDataset)\r\n\r\n        const profile = getThing(\r\n          userDataset,\r\n          webId\r\n        );\r\n\r\n        const lastName = getStringNoLocale(profile, SCHEMA_INRUPT_EXT.familyName);\r\n        const fname = getStringNoLocale(profile, FOAF.firstName);\r\n        const role = getStringNoLocale(profile, VCARD.role);\r\n\r\n        console.log(lastName, fname, role)\r\n\r\n        // 3. Retrieve specific data from the retrieved thing; i.e. profile.\r\n\r\n        // 3a. Get a single string data value from the profile.\r\n        // Specifically, the operation returns the profile's VCARD.fn\r\n        // (i.e., \"http://www.w3.org/2006/vcard/ns#fn\") value as a string.\r\n\r\n        const fn = getStringNoLocale(profile, VCARD.fn);\r\n\r\n        // 3b. Get multiple URL data from the profile.\r\n        // Specifically , the operation returns the profile's FOAF.knows\r\n        // (i.e., \"http://xmlns.com/foaf/0.1/knows\") values as an array of URLs.\r\n        // The URLs point to the Things representing Persons.\r\n\r\n        const acquaintances = getUrlAll(profile, FOAF.knows);\r\n\r\n        console.log(fn, acquaintances)\r\n\r\n      //  console.log(\"SPACE\",SPACE)\r\n        let storage = getUrl(profile, \"http://www.w3.org/ns/pim/space#storage\");\r\n        console.log(\"storage\", storage)\r\n        //\r\n        // // ...\r\n        //\r\n\r\n        // let myChangedDataset = userDataset\r\n        // // // For example, the user must be someone with Write access to the specified URL.\r\n        // const savedSolidDataset = await saveSolidDatasetAt(\r\n        //   \"https://docs-example.inrupt.net/profile/card\",\r\n        //   myChangedDataset, {\r\n        //     fetch: fetch\r\n        //   });\r\n        //\r\n        //   console.log(savedSolidDataset)\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n\r\n  <style>\r\n\r\n  </style>\r\n"]}]}