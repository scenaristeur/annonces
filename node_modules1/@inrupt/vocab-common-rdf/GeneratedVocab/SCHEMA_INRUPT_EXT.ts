/**
 * MIT License
 * 
 * Copyright 2020 Inrupt Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the &quot;Software&quot;), to deal in
 * the Software without restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
 * Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

/**
 * Generated by the artifact generator [@inrupt/lit-artifact-generator], version [0.13.3]
 * as part of artifact: [vocab-common-rdf], version: [0.7.2]
 * on 'Wednesday, January 13, 2021 2:32 AM'.
 *
 * Vocabulary built from vocab list file: [common-rdf/Common/Vocab-List-Common-Rdf.yml].
 *
 * Inrupt extension to Schema.org terms providing
 multilingual alternative names (i.e. labels) and translations for comments
 (e.g. for use directly as labels or tool-tips in user interfaces or error
 messages). This extension very deliberately cherry-picks the individual terms
 from Schema.org that Inrupt currently deem generally useful for Solid and Solid
 applications (meaning we can provide a much cleaner, less noisy and smaller
 bundle size when generating programming language artifacts that provide
 convenient constants for just these selected terms, rather than including the
 over 2,500 terms currently defined in Schema.org).
 */

import { DataFactory } from 'rdf-data-factory';
import * as RdfTypes from 'rdf-js';

const rdfFactory: RdfTypes.DataFactory = new DataFactory();

function _NS(localName: string): RdfTypes.NamedNode {
  return rdfFactory.namedNode(`http://schema.org/${localName}`);
}

// Add 'any' type annotation in case this vocab includes 'NamedNode' instances,
// for example instances of Constant IRIs (TypeScript compiler will complain of
// "semantic error TS2742" otherwise).
const SCHEMA_INRUPT_EXT: any = {
  PREFIX: "schema-inrupt-ext",
  NAMESPACE: "http://schema.org/",
  PREFIX_AND_NAMESPACE: { "schema-inrupt-ext": "http://schema.org/" },
  NS: _NS,

  // *******************
  // All the Properties.
  // *******************

  /**
   * Family Name
   */
  familyName: _NS("familyName"),

  /**
   * Additional Name
   */
  additionalName: _NS("additionalName"),

  /**
   * License
   */
  license: _NS("license"),

  /**
   * Must have comment too!
   */
  newTerm: _NS("newTerm"),

  /**
   * Name
   */
  name: _NS("name"),

  /**
   * Text
   */
  text: _NS("text"),
 }

export default SCHEMA_INRUPT_EXT;
