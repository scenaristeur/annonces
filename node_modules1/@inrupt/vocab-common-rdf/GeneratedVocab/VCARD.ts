/**
 * MIT License
 * 
 * Copyright 2020 Inrupt Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the &quot;Software&quot;), to deal in
 * the Software without restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
 * Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

/**
 * Generated by the artifact generator [@inrupt/lit-artifact-generator], version [0.13.3]
 * as part of artifact: [vocab-common-rdf], version: [0.7.2]
 * on 'Wednesday, January 13, 2021 2:32 AM'.
 *
 * Vocabulary built from vocab list file: [common-rdf/Common/Vocab-List-Common-Rdf.yml].
 *
 * [Generator provided] - vCard - for describing People and Organizations
 */

import { DataFactory } from 'rdf-data-factory';
import * as RdfTypes from 'rdf-js';

const rdfFactory: RdfTypes.DataFactory = new DataFactory();

function _NS(localName: string): RdfTypes.NamedNode {
  return rdfFactory.namedNode(`http://www.w3.org/2006/vcard/ns#${localName}`);
}

// Add 'any' type annotation in case this vocab includes 'NamedNode' instances,
// for example instances of Constant IRIs (TypeScript compiler will complain of
// "semantic error TS2742" otherwise).
const VCARD: any = {
  PREFIX: "vcard",
  NAMESPACE: "http://www.w3.org/2006/vcard/ns#",
  PREFIX_AND_NAMESPACE: { "vcard": "http://www.w3.org/2006/vcard/ns#" },
  NS: _NS,

  // *****************
  // All the Classes.
  // *****************

  /**
   * Acquaintance
   */
  Acquaintance: _NS("Acquaintance"),

  /**
   * Used for relation type codes. The URI of the relation type code must be used as the value for the Relation Type.
   */
  RelatedType: _NS("RelatedType"),

  /**
   * Agent
   */
  Agent: _NS("Agent"),

  /**
   * This class is deprecated
   */
  BBS: _NS("BBS"),

  /**
   * Used for telephone type codes. The URI of the telephone type code must be used as the value for the Telephone Type.
   */
  TelephoneType: _NS("TelephoneType"),

  /**
   * This class is deprecated
   */
  Car: _NS("Car"),

  /**
   * Also called mobile telephone
   */
  Cell: _NS("Cell"),

  /**
   * Child
   */
  Child: _NS("Child"),

  /**
   * Colleague
   */
  Colleague: _NS("Colleague"),

  /**
   * Contact
   */
  Contact: _NS("Contact"),

  /**
   * Coresident
   */
  Coresident: _NS("Coresident"),

  /**
   * Coworker
   */
  Coworker: _NS("Coworker"),

  /**
   * Crush
   */
  Crush: _NS("Crush"),

  /**
   * Date
   */
  Date: _NS("Date"),

  /**
   * This class is deprecated
   */
  Dom: _NS("Dom"),

  /**
   * Used for type codes. The URI of the type code must be used as the value for Type.
   */
  Type: _NS("Type"),

  /**
   * Emergency
   */
  Emergency: _NS("Emergency"),

  /**
   * Fax
   */
  Fax: _NS("Fax"),

  /**
   * Female
   */
  Female: _NS("Female"),

  /**
   * Used for gender codes. The URI of the gender code must be used as the value for Gender.
   */
  Gender: _NS("Gender"),

  /**
   * Friend
   */
  Friend: _NS("Friend"),

  /**
   * This implies that the property is related to an individual's personal life
   */
  Home: _NS("Home"),

  /**
   * This class is deprecated
   */
  ISDN: _NS("ISDN"),

  /**
   * This class is deprecated
   */
  Internet: _NS("Internet"),

  /**
   * This class is deprecated
   */
  Intl: _NS("Intl"),

  /**
   * Kin
   */
  Kin: _NS("Kin"),

  /**
   * This class is deprecated
   */
  Label: _NS("Label"),

  /**
   * Male
   */
  Male: _NS("Male"),

  /**
   * Me
   */
  Me: _NS("Me"),

  /**
   * Met
   */
  Met: _NS("Met"),

  /**
   * This class is deprecated
   */
  Modem: _NS("Modem"),

  /**
   * This class is deprecated
   */
  Msg: _NS("Msg"),

  /**
   * Muse
   */
  Muse: _NS("Muse"),

  /**
   * Neighbor
   */
  Neighbor: _NS("Neighbor"),

  /**
   * None
   */
  None: _NS("None"),

  /**
   * Other
   */
  Other: _NS("Other"),

  /**
   * This class is deprecated
   */
  PCS: _NS("PCS"),

  /**
   * Pager
   */
  Pager: _NS("Pager"),

  /**
   * This class is deprecated
   */
  Parcel: _NS("Parcel"),

  /**
   * Parent
   */
  Parent: _NS("Parent"),

  /**
   * This class is deprecated
   */
  Postal: _NS("Postal"),

  /**
   * This class is deprecated
   */
  Pref: _NS("Pref"),

  /**
   * Sibling
   */
  Sibling: _NS("Sibling"),

  /**
   * Spouse
   */
  Spouse: _NS("Spouse"),

  /**
   * Sweetheart
   */
  Sweetheart: _NS("Sweetheart"),

  /**
   * This class is deprecated. Use the hasTelephone object property.
   */
  Tel: _NS("Tel"),

  /**
   * Also called sms telephone
   */
  Text: _NS("Text"),

  /**
   * Text phone
   */
  TextPhone: _NS("TextPhone"),

  /**
   * Unknown
   */
  Unknown: _NS("Unknown"),

  /**
   * Video
   */
  Video: _NS("Video"),

  /**
   * Voice
   */
  Voice: _NS("Voice"),

  /**
   * This implies that the property is related to an individual's work place
   */
  Work: _NS("Work"),

  /**
   * This class is deprecated
   */
  X400: _NS("X400"),

  /**
   * To specify the components of the delivery address for the  object
   */
  Address: _NS("Address"),

  /**
   * To specify the electronic mail address for communication with the object the vCard represents. Use the hasEmail object property.
   */
  Email: _NS("Email"),

  /**
   * Object representing a group of persons or entities.  A group object will usually contain hasMember properties to specify the members of the group.
   */
  Group: _NS("Group"),

  /**
   * The parent class for all objects
   */
  Kind: _NS("Kind"),

  /**
   * An object representing a single person or entity
   */
  Individual: _NS("Individual"),

  /**
   * An object representing a named geographical place
   */
  Location: _NS("Location"),

  /**
   * An object representing an organization.  An organization is a single entity, and might represent a business or government, a department or division within a business or government, a club, an association, or the like.

   */
  Organization: _NS("Organization"),

  /**
   * To specify the components of the name of the object
   */
  Name: _NS("Name"),

  /**
   * The vCard class is  equivalent to the new Kind class, which is the parent for the four explicit types of vCards (Individual, Organization, Location, Group)
   */
  VCard: _NS("VCard"),


  // *******************
  // All the Properties.
  // *******************

  /**
   * This object property has been mapped
   */
  adr: _NS("adr"),

  /**
   * To specify the components of the delivery address for the object
   */
  hasAddress: _NS("hasAddress"),

  /**
   * This object property has been deprecated
   */
  agent: _NS("agent"),

  /**
   * The date of marriage, or equivalent, of the object
   */
  anniversary: _NS("anniversary"),

  /**
   * To specify the birth date of the object
   */
  bday: _NS("bday"),

  /**
   * The category information about the object, also known as tags
   */
  category: _NS("category"),

  /**
   * This data property has been deprecated
   */
  class: _NS("class"),

  /**
   * This object property has been mapped
   */
  email: _NS("email"),

  /**
   * To specify the electronic mail address for communication with the object
   */
  hasEmail: _NS("hasEmail"),

  /**
   * This data property has been deprecated
   */
  extended_address: _NS("extended-address"),

  /**
   * This object property has been mapped
   */
  geo: _NS("geo"),

  /**
   * To specify information related to the global positioning of the object. May also be used as a property parameter.
   */
  hasGeo: _NS("hasGeo"),

  /**
   * Used to support property parameters for the additional name data property
   */
  hasAdditionalName: _NS("hasAdditionalName"),

  /**
   * To specify the busy time associated with the object. (Was called FBURL in RFC6350)
   */
  hasCalendarBusy: _NS("hasCalendarBusy"),

  /**
   * To specify the calendar associated with the object. (Was called CALURI in RFC6350)
   */
  hasCalendarLink: _NS("hasCalendarLink"),

  /**
   * To specify the calendar user address to which a scheduling request be sent for the object. (Was called CALADRURI in RFC6350)
   */
  hasCalendarRequest: _NS("hasCalendarRequest"),

  /**
   * Used to support property parameters for the category data property
   */
  hasCategory: _NS("hasCategory"),

  /**
   * Used to support property parameters for the country name data property
   */
  hasCountryName: _NS("hasCountryName"),

  /**
   * Used to support property parameters for the formatted name data property
   */
  hasFN: _NS("hasFN"),

  /**
   * Used to support property parameters for the family name data property
   */
  hasFamilyName: _NS("hasFamilyName"),

  /**
   * To specify  the sex or gender identity of the object. URIs are recommended to enable interoperable sex and gender codes to be used.
   */
  hasGender: _NS("hasGender"),

  /**
   * Used to support property parameters for the given name data property
   */
  hasGivenName: _NS("hasGivenName"),

  /**
   * Used to support property parameters for the honorific prefix data property
   */
  hasHonorificPrefix: _NS("hasHonorificPrefix"),

  /**
   * Used to support property parameters for the honorific suffix data property
   */
  hasHonorificSuffix: _NS("hasHonorificSuffix"),

  /**
   * To specify the instant messaging and presence protocol communications with the object. (Was called IMPP in RFC6350)
   */
  hasInstantMessage: _NS("hasInstantMessage"),

  /**
   * Used to support property parameters for the language data property
   */
  hasLanguage: _NS("hasLanguage"),

  /**
   * Used to support property parameters for the locality data property
   */
  hasLocality: _NS("hasLocality"),

  /**
   * Used to support property parameters for the nickname data property
   */
  hasNickname: _NS("hasNickname"),

  /**
   * The nick name associated with the object
   */
  nickname: _NS("nickname"),

  /**
   * Used to support property parameters for the note data property
   */
  hasNote: _NS("hasNote"),

  /**
   * Used to support property parameters for the organization name data property
   */
  hasOrganizationName: _NS("hasOrganizationName"),

  /**
   * Used to support property parameters for the organization unit name data property
   */
  hasOrganizationUnit: _NS("hasOrganizationUnit"),

  /**
   * Used to support property parameters for the postal code data property
   */
  hasPostalCode: _NS("hasPostalCode"),

  /**
   * Used to support property parameters for the region data property
   */
  hasRegion: _NS("hasRegion"),

  /**
   * To specify a relationship between another entity and the entity represented by this object
   */
  hasRelated: _NS("hasRelated"),

  /**
   * Used to support property parameters for the role data property
   */
  hasRole: _NS("hasRole"),

  /**
   * To identify the source of directory information of the object
   */
  hasSource: _NS("hasSource"),

  /**
   * Used to support property parameters for the street address data property
   */
  hasStreetAddress: _NS("hasStreetAddress"),

  /**
   * Used to support property parameters for the title data property
   */
  hasTitle: _NS("hasTitle"),

  /**
   * To specify a value that represents a globally unique identifier corresponding to the object
   */
  hasUID: _NS("hasUID"),

  /**
   * Used to indicate the resource value of an object property that requires property parameters
   */
  hasValue: _NS("hasValue"),

  /**
   * This data property has been deprecated
   */
  label: _NS("label"),

  /**
   * To specify the language that may be used for contacting the object. May also be used as a property parameter.
   */
  language: _NS("language"),

  /**
   * This data property has been deprecated. See hasGeo
   */
  latitude: _NS("latitude"),

  /**
   * This data property has been deprecated. See hasGeo
   */
  longitude: _NS("longitude"),

  /**
   * This data property has been deprecated
   */
  mailer: _NS("mailer"),

  /**
   * A note associated with the object
   */
  note: _NS("note"),

  /**
   * This object property has been mapped. Use the organization-name data property.
   */
  org: _NS("org"),

  /**
   * To specify the organizational name associated with the object
   */
  organization_name: _NS("organization-name"),

  /**
   * To specify the organizational unit name associated with the object
   */
  organization_unit: _NS("organization-unit"),

  /**
   * This data property has been deprecated
   */
  post_office_box: _NS("post-office-box"),

  /**
   * To specify the identifier for the product that created the object
   */
  prodid: _NS("prodid"),

  /**
   * To specify revision information about the object
   */
  rev: _NS("rev"),

  /**
   * To specify the function or part played in a particular situation by the object
   */
  role: _NS("role"),

  /**
   * To specify the string to be used for national-language-specific sorting. Used as a property parameter only.
   */
  sort_string: _NS("sort-string"),

  /**
   * To specify the position or job of the object
   */
  title: _NS("title"),

  /**
   * To indicate time zone information that is specific to the object. May also be used as a property parameter.
   */
  tz: _NS("tz"),

  /**
   * Used to indicate the literal value of a data property that requires property parameters
   */
  value: _NS("value"),

  /**
   * The country name associated with the address of the object
   */
  country_name: _NS("country-name"),

  /**
   * The locality (e.g. city or town) associated with the address of the object
   */
  locality: _NS("locality"),

  /**
   * The postal code associated with the address of the object
   */
  postal_code: _NS("postal-code"),

  /**
   * The region (e.g. state or province) associated with the address of the object
   */
  region: _NS("region"),

  /**
   * The street address associated with the address of the object
   */
  street_address: _NS("street-address"),

  /**
   * To include a member in the group this object represents. (This property can only be used by Group individuals)
   */
  hasMember: _NS("hasMember"),

  /**
   * The additional name associated with the object
   */
  additional_name: _NS("additional-name"),

  /**
   * The family name associated with the object
   */
  family_name: _NS("family-name"),

  /**
   * The given name associated with the object
   */
  given_name: _NS("given-name"),

  /**
   * The honorific prefix of the name associated with the object
   */
  honorific_prefix: _NS("honorific-prefix"),

  /**
   * The honorific suffix of the name associated with the object
   */
  honorific_suffix: _NS("honorific-suffix"),

  /**
   * The formatted text corresponding to the name of the object
   */
  fn: _NS("fn"),

  /**
   * To specify a public key or authentication certificate associated with the object
   */
  hasKey: _NS("hasKey"),

  /**
   * This object property has been mapped
   */
  key: _NS("key"),

  /**
   * To specify a graphic image of a logo associated with the object 
   */
  hasLogo: _NS("hasLogo"),

  /**
   * This object property has been mapped
   */
  logo: _NS("logo"),

  /**
   * To specify the components of the name of the object
   */
  hasName: _NS("hasName"),

  /**
   * This object property has been mapped
   */
  n: _NS("n"),

  /**
   * To specify an image or photograph information that annotates some aspect of the object
   */
  hasPhoto: _NS("hasPhoto"),

  /**
   * This object property has been mapped
   */
  photo: _NS("photo"),

  /**
   * To specify a digital sound content information that annotates some aspect of the object
   */
  hasSound: _NS("hasSound"),

  /**
   * This object property has been mapped
   */
  sound: _NS("sound"),

  /**
   * To specify the telephone number for telephony communication with the object
   */
  hasTelephone: _NS("hasTelephone"),

  /**
   * This object property has been mapped
   */
  tel: _NS("tel"),

  /**
   * To specify a uniform resource locator associated with the object
   */
  hasURL: _NS("hasURL"),

  /**
   * This object property has been mapped
   */
  url: _NS("url"),
 }

export default VCARD;
