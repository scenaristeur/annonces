/**
 * MIT License
 * 
 * Copyright 2020 Inrupt Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the &quot;Software&quot;), to deal in
 * the Software without restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
 * Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

/**
 * Generated by the artifact generator [@inrupt/lit-artifact-generator], version [0.13.3]
 * as part of artifact: [vocab-common-rdf], version: [0.7.2]
 * on 'Wednesday, January 13, 2021 2:32 AM'.
 *
 * Vocabulary built from vocab list file: [common-rdf/Common/Vocab-List-Common-Rdf.yml].
 *
 * [Generator provided] - vCard with selective terms having translations - for describing People and Organizations
 */

import { DataFactory } from 'rdf-data-factory';
import * as RdfTypes from 'rdf-js';

const rdfFactory: RdfTypes.DataFactory = new DataFactory();

function _NS(localName: string): RdfTypes.NamedNode {
  return rdfFactory.namedNode(`http://www.w3.org/2006/vcard/ns#${localName}`);
}

// Add 'any' type annotation in case this vocab includes 'NamedNode' instances,
// for example instances of Constant IRIs (TypeScript compiler will complain of
// "semantic error TS2742" otherwise).
const VCARD_INRUPT_EXT: any = {
  PREFIX: "vcard-inrupt-ext",
  NAMESPACE: "http://www.w3.org/2006/vcard/ns#",
  PREFIX_AND_NAMESPACE: { "vcard-inrupt-ext": "http://www.w3.org/2006/vcard/ns#" },
  NS: _NS,

  // *******************
  // All the Properties.
  // *******************

  /**
   * To specify the components of the delivery address for the object
   */
  hasAddress: _NS("hasAddress"),

  /**
   * To specify the electronic mail address for communication with the object
   */
  hasEmail: _NS("hasEmail"),

  /**
   * To specify the telephone number for telephony communication with the object
   */
  hasTelephone: _NS("hasTelephone"),

  /**
   * The formatted text corresponding to the name of the object
   */
  fn: _NS("fn"),

  /**
   * To specify the function or part played in a particular situation by the object
   */
  role: _NS("role"),

  /**
   * To specify the organizational name associated with the object
   */
  organization_name: _NS("organization-name"),

  /**
   * The street address associated with the address of the object
   */
  street_address: _NS("street-address"),

  /**
   * The locality (e.g. city or town) associated with the address of the object
   */
  locality: _NS("locality"),

  /**
   * The postal code associated with the address of the object
   */
  postal_code: _NS("postal-code"),

  /**
   * The region (e.g. state or province) associated with the address of the object
   */
  region: _NS("region"),

  /**
   * The country name associated with the address of the object
   */
  country_name: _NS("country-name"),
 }

export default VCARD_INRUPT_EXT;
