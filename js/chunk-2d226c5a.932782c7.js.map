{"version":3,"sources":["webpack:///./src/components/solid/SolidLoginButton.vue?97ba","webpack:///src/components/solid/SolidLoginButton.vue","webpack:///./src/components/solid/SolidLoginButton.vue?d876","webpack:///./src/components/solid/SolidLoginButton.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","_v","_s","webId","attrs","on","login","logout","staticRenderFns","name","data","methods","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACJ,EAAIM,GAAG,IAAIN,EAAIO,GAAGP,EAAIQ,OAAO,KAAmB,MAAbR,EAAIQ,MAAeJ,EAAG,WAAW,CAACK,MAAM,CAAC,QAAU,WAAWC,GAAG,CAAC,MAAQV,EAAIW,QAAQ,CAACX,EAAIM,GAAG,WAAWF,EAAG,WAAW,CAACK,MAAM,CAAC,QAAU,UAAUC,GAAG,CAAC,MAAQV,EAAIY,SAAS,CAACZ,EAAIM,GAAG,aAAa,IAC1UO,EAAkB,G,oCCUtB,GACEC,KAAM,mBACNC,KAAM,WACJ,MAAO,CACLP,MAAO,OAGX,QAPF,WAOA,wKACA,iBADA,OAEA,2CACA,kBAHA,8CAMEQ,QAAS,CACP,aADJ,WACA,wKAQA,qCACA,4BACA,kBACA,0DACA,mBAZA,8CAeI,cAhBJ,WAgBA,gJAGA,iDAHA,gCAMA,oBAEA,gCAGA,iCACA,4BAZA,8CAkBI,MAlCJ,WAkCM,IAAN,OAAM,OAAN,qDAAQ,OAAR,0EACA,kBADA,8CASI,OA3CJ,WA2CM,IAAN,OAAM,OAAN,qDAAQ,OAAR,0FACA,0CADA,uBAEA,iBAFA,gDCnEyW,I,YCOrWC,EAAY,eACd,EACAlB,EACAc,GACA,EACA,KACA,KACA,MAIa,aAAAI,E","file":"js/chunk-2d226c5a.932782c7.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._v(\" \"+_vm._s(_vm.webId)+\" \"),(_vm.webId == null)?_c('b-button',{attrs:{\"variant\":\"success\"},on:{\"click\":_vm.login}},[_vm._v(\"Login\")]):_c('b-button',{attrs:{\"variant\":\"danger\"},on:{\"click\":_vm.logout}},[_vm._v(\"Logout\")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    {{ webId }}\r\n    <b-button variant=\"success\" v-if=\"webId == null\" @click=\"login\">Login</b-button>\r\n    <b-button variant=\"danger\" v-else @click=\"logout\">Logout</b-button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { handleIncomingRedirect, login, /*fetch,*/ getDefaultSession, onSessionRestore } from '@inrupt/solid-client-authn-browser'\r\n\r\nexport default {\r\n  name: 'SolidLoginButton',\r\n  data: function () {\r\n    return {\r\n      webId: null\r\n    }\r\n  },\r\n  async mounted(){\r\n    await this.checkSession()\r\n    onSessionRestore((url) => {\r\n      console.log(url)\r\n    });\r\n  },\r\n  methods: {\r\n    async checkSession(){\r\n      // 1. Call the handleIncomingRedirect() function to complete the authentication process.\r\n      //   If the page is being loaded after the redirect from the Solid Identity Provider\r\n      //      (i.e., part of the authentication flow), the user's credentials are stored in-memory, and\r\n      //      the login process is complete. That is, a session is logged in\r\n      //      only after it handles the incoming redirect from the Solid Identity Provider.\r\n      //   If the page is not being loaded after a redirect from the Solid Identity Provider,\r\n      //      nothing happens.\r\n      await  handleIncomingRedirect({\r\n        restorePreviousSession: true\r\n      }).then((info) => {\r\n        console.log(`Logged in with WebID [${info.webId}]`)\r\n        this.webId = info.webId\r\n      })\r\n    },\r\n    async loginAndFetch() {\r\n\r\n      // 2. Start the Login Process if not already logged in.\r\n      if (!getDefaultSession().info.isLoggedIn) {\r\n        // The `login()` redirects the user to their identity provider;\r\n        // i.e., moves the user away from the current page.\r\n        await login({\r\n          // Specify the URL of the user's Solid Identity Provider; e.g., \"https://inrupt.net\"\r\n          oidcIssuer: \"https://inrupt.net\",\r\n          // Specify the URL the Solid Identity Provider should redirect to after the user logs in,\r\n          // e.g., the current page for a single-page app.\r\n          redirectUrl: window.location.href,\r\n          restorePreviousSession: true\r\n        });\r\n      }\r\n\r\n        },\r\n\r\n        async login() {\r\n          this.loginAndFetch();\r\n          // let session = await auth.currentSession();\r\n          // let popupUri = 'https://solidcommunity.net/common/popup.html';\r\n          // if (!session){\r\n          //   session = await auth.popupLogin({ popupUri });\r\n          // }\r\n          // this.webId = session.webId\r\n        },\r\n        async logout(){\r\n          await getDefaultSession().logout()\r\n          await this.checkSession()\r\n\r\n          // await  auth.logout()\r\n          // this.webId = null\r\n        },\r\n      }\r\n    }\r\n    </script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SolidLoginButton.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SolidLoginButton.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SolidLoginButton.vue?vue&type=template&id=4e40fc84&\"\nimport script from \"./SolidLoginButton.vue?vue&type=script&lang=js&\"\nexport * from \"./SolidLoginButton.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}